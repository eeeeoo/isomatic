
/*  Work with temp
 *   Getting_BPM_to_Monitor prints the BPM to the Serial Monitor, using the least lines of code and PulseSensor Library.
 *  WORK WITH LED LIGHTS AS WELL
 *  https://pulsesensor.com/pages/getting-advanced
 *
----------------------------------------------------------------
1) Displays user's live and changing BPM, Beats Per Minute, in Arduino's native Serial Monitor.
2) Use BPM to kind of control the led strip

--------------------------------------------------------------------*/
#include <OneWire.h>
#include <DallasTemperature.h>
#include <Adafruit_NeoPixel.h>
#include <PulseSensorPlayground.h>     // Includes the PulseSensorPlayground Library.   

// Data wire is plugged into pin 10 on the Arduino for temperature
#define ONE_WIRE_BUS 10
#define USE_ARDUINO_INTERRUPTS true    // Set-up low-level interrupts for most acurate BPM math.
#define PIN 6 //for BPM
#define NUMPIXELS 5 // how many neopixels we're using


// Setup a oneWire instance to communicate with any OneWire devices 
// (not just Maxim/Dallas temperature ICs)
OneWire oneWire(ONE_WIRE_BUS);

// Pass our oneWire reference to Dallas Temperature.
DallasTemperature sensors(&oneWire);


#ifdef __AVR__
  #include <avr/power.h>
#endif

int delayval = 500; // how often we want the temp/bpm being read

Adafruit_NeoPixel pixels = Adafruit_NeoPixel(NUMPIXELS, PIN, NEO_GRB + NEO_KHZ800);



//  Variables
const int PulseWire = 9;       // PulseSensor PURPLE WIRE connected to ANALOG PIN 9

int num_of_LED = 0;          // The on-board Arduino LED lights to display
int Threshold = 550;           // Determine which Signal to "count as a beat" and which to ignore.
                       
                               
PulseSensorPlayground pulseSensor;  // Creates an instance of the PulseSensorPlayground object called "pulseSensor"


void setup() {   

  Serial.begin(9600);          // For Serial Monitor

  //pinMode(6, INPUT_PULLUP);
  pixels.begin();//turn on the pixels
//  pixels.setBrightness(50);  
  // Configure the PulseSensor object, by assigning our variables to it. 
  pulseSensor.analogInput(PulseWire);   
  //pulseSensor.blinkOnPulse(LED13);       //auto-magically blink Arduino's LED with heartbeat.
  pulseSensor.setThreshold(Threshold);   

  // Double-check the "pulseSensor" object was created and "began" seeing a signal. 
   if (pulseSensor.begin()) {
    Serial.println("PulseSensor Object created -"); 

    Serial.println("WE ARAE IN DEMO MODE");
  }
}



void loop() {
// call sensors.requestTemperatures() to issue a global temperature
  // request to all devices on the bus
  Serial.print(" Requesting temperatures...");
  sensors.requestTemperatures(); // Send the command to get temperatures
  Serial.println("DONE");
  Serial.print("Temperature is: ");
  Serial.print(sensors.getTempCByIndex(0)); // Why "byIndex"? 
    // You can have more than one IC on the same bus. 
    // 0 refers to the first IC on the wire
//   delay(1000);

 int myBPM = pulseSensor.getBeatsPerMinute();  // Calls function on our pulseSensor object that returns BPM as an "int".
// "myBPM" hold this BPM value now. 

if (pulseSensor.sawStartOfBeat()) {            // Constantly test to see if "a beat happened". 
 Serial.println("Heartbeat detected"); // If test is "true", print a message "a heartbeat happened".
 Serial.print("BPM: ");                        // Print phrase "BPM: " 
 Serial.println(myBPM);                        // Print the value inside of myBPM. 
 
 Serial.println("LEDS triggerd");
 //colorWipe(strip.Color(255,0,0),50);
 
 for(int i=0;i<NUMPIXELS;i++){
  pixels.setPixelColor(i, pixels.Color(200,211,254));
  pixels.show();
  delay(delayval);
 }
 int temp= 31;
// int temp=28; 
 //sensors.getTempCByIndex(0);

/*
*To determine when to change the music
*and control the lights pattern
 */
 if(temp > 30){
  Serial.println("Your body temperature is over 30. Bring on the fast music");
  delay(delayval);
//  for(int i=0;i<NUMPIXELS;i++){
//    pixels.setPixelColor(i, pixels.Color(255,0,0));
//    pixels.show();
//    delay(delayval);
  //}
 }else{
  Serial.println("Your body temperature is less than 30. Bring on the slow music");
  delay(delayval);
//  for(int i=0;i<NUMPIXELS;i++){
//    pixels.setPixelColor(i, pixels.Color(0,0,254));
//    pixels.show();
//    delay(delayval);
  //}
 }
}

  //delay(100);                    // considered best practice in a simple sketch.

}



  
